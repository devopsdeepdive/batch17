11th Sep
MONOLITHIC VS MICRO SERVICES
DOCKER:
INTRODUCTION
Docker is a tool that is used to automate the deployment of applications in lightweight containers so that applications can work efficiently in different environments in isolation

INSTALLATION
https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository

free: communit edition
premium: enterprise-edition
12th Sep 2023
docker commands:
docker hub: search for the images
y(DockerHub:https://hub.docker.com/)
How to use docker images?
How to create docker container?

Common Commands:
docker --help
docker --version
docker info
images      List images
 pull        Download an image from a registry(DockerHub:https://hub.docker.com/)
docker pull tomcat(latest version of tomcat)
docker pull tomcat:jdk17
  history     Show the history of an image
  inspect     Return low-level information on Docker objects
docker inspect <<image ID>>

Container commands:
docker run --help
  run         Create and run a new container from an image
    -i, --interactive                    Keep STDIN open even
  -t, --tty                            Allocate a pseudo-TTY
  d, --detach                         Run container in background and print  container ID
                                      
  ps          List containers
docker run -itd d0ed0a728666
 -p, --publish list                   Publish a container's  port(s) to the host                                      
 docker run -itd -p hostport:container port  d0ed0a728666
 --name string                    Assign a name to the container                                       
docker run -itd  --name tomcat -p 8080:8080 d0ed0a728666
docker logs <<container id/name>>
docker run -itd -p 8081:80 --name nginx f5a6b296b8a2
13th Sep 2023
docker ps -a : Display all the containers(Running and stopped)
  create      Create a new container
creating+start=create
14th SEPT
For a container to be in a killed state, we run the docker kill command, which sends SIGKILL signals to terminate the main process immediately. This means the difference between docker stop and docker kill is that - stop can allow safe termination (within the grace period) while kill terminates immediately
docker rmi <<image ID>>
 docker stop $(docker ps -a -q):Stop the running  containers
docker rm $(docker ps -a -q) : Remove the all the containers
docker rmi $(docker images -a -q) :To remove all the images
exec        Execute a command in a running container
docker exec -it 50850c8070ec /bin/bash
  stats       Display a live stream of container(s) resource
MEMORY:
https://docs.docker.com/config/containers/resource_constraints/

docker run -itd --memory="50m" f5a6b296b8a2 :Hard limit
docker run -itd --memory-reservation="150m" f5a6b296b8a2 : soft limit
docker inspect <<container id>>

docker update --memory="125m" 2691f92ecbf4: Memory update for running containers

CPU 
By default, each container's access to the host machine's CPU cycles is unlimited. 

15th Sep 2023:
docker run -itd -w /app nginx:set working directory
docker rename mysql mysql-new
docker commit 0e1bc96ca8bb
docker tag 826efc05c6b8n(existing image id) devopsdeepdive/nginxbatch17(username/new image name)
docker push devopsdeepdive/nginxbatch17
 docker export --output="my.tar" c216cafc125a
docker import my.tar
docker save --output myimage.tar c9101035cede
 docker load --input myimage.tar
 docker cp batch17.txt c216cafc125a:/var/: Local to inside container
docker cp c216cafc125a:/var/sample.txt .: Inside to local(host )

27th Sep 2023:
Networking overview
Container networking refers to the ability for containers to connect to and communicate with each other, or to non-Docker workloads.
1. bridge: 
2. host
docker run -itd --network host  d6cb4fb72e38
3. overlay
4. ipvlan
5. macvlan
6. none:  
https://docs.docker.com/network/drivers/

29th sep 2023
 docker build -t myimage .

FROM
RUN
CMD
ENTRYPOINT
VOLUME
WORKDIR
ENV
EXPOSE
COPY
ADD
USER
ONBUILD

